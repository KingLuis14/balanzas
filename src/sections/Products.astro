---
import Button from "@/components/Button.astro";
import CardContent from "@/components/Card/Card-Content.astro";
import Card from "@/components/Card/Card.astro";
import LayoutWrapper from "@/components/LayoutWrapper.astro";
import SectionPage from "@/components/SectionPage.astro";
import {Product } from '@/data/Products.ts';
---

<SectionPage classUtilities="padding-section bg-color-primary-100">
    <LayoutWrapper>
        <h2 class="title-section text-center">Nuestros Productos</h2>
        <div class="Products__inner">
        {
            Product.map(({ title, img, price}, index) => (
                <Card {...(index % 2 === 0 && {textAlert: "Oferta"})}>
                    <picture class="lazy-picture aspect-ratio-box animation-loader" >
                        {
                            img.imagen.map(({url, type})=> (
                             <source data-srcset={`/img/${url}`} type={`image/${type}`} />
                            ))
                        }
                        <img
                            class="aspect-ratio-box"
                            alt={img.alt}
                        />
                    </picture>
                    <CardContent>
                        <h3 class="fw-600 line-heigth-normal">{title}</h3>
                        <span class="fs-title3 fw-600">
                            S/{price.now}
                            <del class="fs-small fw-400 margin-inline-start-8 color-neutral-500">
                                S/{price.old}
                            </del>
                        </span>
                        <Button style={{ width: "fit-content" }} variant="secondary">
                            Ver detalles
                        </Button>
                    </CardContent>
                </Card>
            ))
        }
        </div>
    </LayoutWrapper>
</SectionPage>

<style lang="scss">
    @use "../scss/settings/" as *;
    .Products {
        &__inner {
            display: grid;
            grid-template-columns: repeat(1, 1fr);
            gap: 1rem;

            @include media-Query(tablet) {
                grid-template-columns: repeat(2, 1fr);
            }

            @include media-Query(desktop) {
                grid-template-columns: repeat(4, 1fr);
            }
        }
    }
</style>
