---
import { Icon } from 'astro-icon/components';
import sliderData from "../data/SliderImg";

---

<section class="Slider" id="Slider">
    <ul class="Slider__lista" id="SliderLista" data-autoplay="false">
        {
            sliderData.map(({ img, alt }) => {
                return (
                    <li class="Slider__item">
                        {img.map((imagen) => {
                            return <img src={`/img/${imagen}`} {alt} />;
                        })}
                    </li>
                );
            })
        }
    </ul>
    <div class="Slider__wrapper">
        <article class="Slider__content">
            <h1>Titulo</h1>
            <p>
                Lorem ipsum dolor sit amet consectetur adipisicing elit.
                Perspiciatis necessitatibus tempora culpa saepe corporis
                possimus nemo dolorem incidunt pariatur. 
            </p>
        </article>
    </div>
    <button class="Slider__btnMoveLeft" id="MoveLeft">
        <Icon name="ArrowIcon" size={25}/>
    </button>
    <button class="Slider__btnMoveRigth" id="MoveRigth">
        <Icon name="ArrowIcon" size={25} />
    </button>
</section>

<style lang="scss">
    .Slider {
        height: 100vmin;
        min-height: 70svh;
        position: relative;
        overflow: hidden;

        &::before {
            content: "";
            position: absolute;
            inset: 0;
            background-color: #100077c3;
        }

        &__lista {
            --Move: 0;
            --transition: none;

            position: absolute;
            inset: 0;
            display: flex;
            transition: var(--transition) cubic-bezier(0.25, 0.46, 0.45, 0.94);
            transform: translateX(var(--Move));
            z-index: -10;
        }

        &__item {
            width: 100%;
            flex-shrink: 0;
        }

        &__wrapper {
            height: 100%;
            display: grid;
            width: min(90%, 1000px);
            position: relative;
            margin-inline: auto;
        }

        &__content {
            position: relative;
            color: white;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            justify-content: center;
            text-align: center;

            

            > p {
                width: min(93%, 70ch);
                margin-inline: auto;
            }
        }

        &__btnMoveLeft {
            position: absolute;
            top: 50%;
            left: 2vw;
            transform: translateY(-50%) ;
            z-index: 10;
            border-radius: 50%;
            outline: 2px solid white;
            color: white;
            padding: .3em; 


            > svg{
                transform: rotate(-90deg);
                pointer-events: none;
            }
        }
        &__btnMoveRigth {
            position: absolute;
            top: 50%;
            right: 2vw;
            transform: translateY(-50%);
            z-index: 10;
            border-radius: 50%;
            outline: 2px solid white;
            color: white;
            padding: .3em; 

            > svg{
                transform: rotate(90deg);
                pointer-events: none;
            }
        }
    }
</style>

<script>
    const $Slider = document.getElementById("Slider");
    const $SliderLista = document.getElementById("SliderLista");
    type DIRECTION = "LEFT" | "RIGHT";
    let inInTransition = false;
    let autoPlaySlider;

    const moveSLider = (direction: DIRECTION) => {
        $SliderLista.style.setProperty("--transition", "transform .5s");

        if (inInTransition) return;

        if (direction === "LEFT") {
            $SliderLista.style.setProperty("--Move", `0px`);
            inInTransition = true;
        } else if (direction === "RIGHT") {
            $SliderLista.style.setProperty("--Move", `-200%`);
            inInTransition = true;
        }

        $SliderLista.addEventListener(
            "transitionend",
            () => transitionSlider(direction),
            { once: true },
        );
    };

    const transitionSlider = (direction: DIRECTION) => {
        $SliderLista.style.setProperty("--transition", "none");
        $SliderLista.style.setProperty("--Move", "-100%");

        if (direction === "LEFT") {
            $SliderLista.prepend($SliderLista.lastElementChild);
            inInTransition = false;
        } else if (direction === "RIGHT") {
            $SliderLista.appendChild($SliderLista.firstElementChild);
            inInTransition = false;
        }
    };

    const loadSliderInitial = () => {
        $SliderLista.style.setProperty("--transition", "none");
        $SliderLista.style.setProperty("--Move", "-100%");
        $SliderLista.prepend($SliderLista.lastElementChild);
    };

    $Slider.addEventListener("click", (e) => {
        const Element = e.target as HTMLElement;

        if (Element.id === "MoveLeft") {
            moveSLider("LEFT");
        }
        if (Element.id === "MoveRigth") {
            moveSLider("RIGHT");
        }
    });

    console.log($SliderLista.getAttribute("data-autoPlay"));
    
    loadSliderInitial();
    

    const startAutoPlay = () => {
        if($SliderLista.getAttribute("data-autoPlay") === 'false')return;
        autoPlaySlider = setInterval(() => {
            moveSLider("RIGHT");
        }, 5000);
    };

    const stopAutoPlay = () => {
        if($SliderLista.getAttribute("data-autoPlay") === 'false')return;
        clearInterval(autoPlaySlider);
    };


    startAutoPlay();
    
    $Slider.addEventListener("mouseenter", () => { stopAutoPlay(); });

    $Slider.addEventListener("mouseleave", () => { startAutoPlay(); });
</script>
